[
	{ "keys": ["ctrl+-"], "command": "close_file" },
	{ "keys": ["f2"], "command": "save" },
	{ "keys": ["f3"], "command": "prompt_open_file" },

	{ "keys": ["keypad_multiply"], "command": "undo" },


	{ "keys": ["keypad_minus"], "command": "cut" },
	{ "keys": ["keypad_plus"], "command": "copy" },

	{ "keys": ["ctrl+shift+delete"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete to Hard EOL.sublime-macro"} },
	{ "keys": ["ctrl+backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Line.sublime-macro"} },

	{ "keys": ["ctrl+keypad5"], "command": "show_at_center" },
	{ "keys": ["ctrl+clear"], "command": "show_at_center" },


	{ "keys": ["f11"],     "command": "exec", "args": { "cmd" : ["tcc.exe", "/c", "f11.bat", "$file"] } },
	{ "keys": ["alt+f11"], "command": "exec", "args": { "cmd" : ["tcc.exe", "/c", "f11.bat", "$file"] } },

	{ "keys": ["f12"],     "command": "exec", "args": { "cmd" : ["tcc.exe", "/c", "f12.bat", "$file"] } },
	{ "keys": ["alt+f12"], "command": "exec", "args": { "cmd" : ["tcc.exe", "/c", "f12.bat", "$file"] } },

	{ "keys": ["shift+alt+up"], "command": "select_lines", "args": {"forward": false} },
	{ "keys": ["shift+alt+down"], "command": "select_lines", "args": {"forward": true} },

	{ "keys": ["f7"], "command": "toggle_record_macro" },
	{ "keys": ["f8"], "command": "run_macro" },

	{ "keys": ["ctrl+k", "ctrl+c"], "command": "toggle_comment", "args": { "block": false } },


	{ "keys": ["ctrl+shift+b"], "command": "build", "args": {"variant": "Run"} },




	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0'"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
		]
	}


]
